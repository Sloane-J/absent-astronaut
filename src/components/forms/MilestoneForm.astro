---
interface Props {
  initialData?: {
    title?: string;
    description?: string;
    dueDate?: Date;
    priority?: 'low' | 'medium' | 'high';
    status?: 'not-started' | 'in-progress' | 'completed' | 'overdue';
    progress?: number;
  };
  submitAction: string;
}

const { initialData, submitAction } = Astro.props;
---

<form action={submitAction} method="POST" class="space-y-6">
  <div>
    <label for="title" class="block text-sm font-medium text-gray-300">Title</label>
    <input
      type="text"
      id="title"
      name="title"
      value={initialData?.title}
      required
      class="mt-1 block w-full rounded-lg bg-gray-700 border-gray-600 text-gray-300 focus:border-blue-500 focus:ring-blue-500"
    />
  </div>

  <div>
    <label for="description" class="block text-sm font-medium text-gray-300">Description</label>
    <textarea
      id="description"
      name="description"
      rows="3"
      class="mt-1 block w-full rounded-lg bg-gray-700 border-gray-600 text-gray-300 focus:border-blue-500 focus:ring-blue-500"
    >{initialData?.description}</textarea>
  </div>

  <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
    <div>
      <label for="dueDate" class="block text-sm font-medium text-gray-300">Due Date</label>
      <input
        type="date"
        id="dueDate"
        name="dueDate"
        value={initialData?.dueDate?.toISOString().split('T')[0]}
        required
        class="mt-1 block w-full rounded-lg bg-gray-700 border-gray-600 text-gray-300 focus:border-blue-500 focus:ring-blue-500"
      />
    </div>

    <div>
      <label for="priority" class="block text-sm font-medium text-gray-300">Priority</label>
      <select
        id="priority"
        name="priority"
        required
        class="mt-1 block w-full rounded-lg bg-gray-700 border-gray-600 text-gray-300 focus:border-blue-500 focus:ring-blue-500"
      >
        <option value="low" selected={initialData?.priority === 'low'}>Low</option>
        <option value="medium" selected={initialData?.priority === 'medium'}>Medium</option>
        <option value="high" selected={initialData?.priority === 'high'}>High</option>
      </select>
    </div>
  </div>

  <div>
    <label for="status" class="block text-sm font-medium text-gray-300">Status</label>
    <select
      id="status"
      name="status"
      required
      class="mt-1 block w-full rounded-lg bg-gray-700 border-gray-600 text-gray-300 focus:border-blue-500 focus:ring-blue-500"
    >
      <option value="not-started" selected={initialData?.status === 'not-started'}>Not Started</option>
      <option value="in-progress" selected={initialData?.status === 'in-progress'}>In Progress</option>
      <option value="completed" selected={initialData?.status === 'completed'}>Completed</option>
    </select>
  </div>

  <div>
    <label for="progress" class="block text-sm font-medium text-gray-300">Progress</label>
    <input
      type="range"
      id="progress"
      name="progress"
      min="0"
      max="100"
      value={initialData?.progress || 0}
      class="mt-1 block w-full"
    />
    <div class="mt-1 text-sm text-gray-400 text-right">
      <span id="progressValue">{initialData?.progress || 0}</span>%
    </div>
  </div>

  <div class="flex justify-end space-x-4">
    <button
      type="button"
      class="px-4 py-2 text-sm rounded-lg bg-gray-700 text-gray-300 hover:bg-gray-600 transition-colors duration-200"
    >
      Cancel
    </button>
    <button
      type="submit"
      class="px-4 py-2 text-sm rounded-lg bg-blue-500 text-white hover:bg-blue-600 transition-colors duration-200"
    >
      Save Milestone
    </button>
  </div>
</form>

<script>
  const progressInput = document.getElementById('progress') as HTMLInputElement;
  const progressValue = document.getElementById('progressValue');

  progressInput?.addEventListener('input', (e) => {
    if (progressValue) {
      progressValue.textContent = (e.target as HTMLInputElement).value;
    }
  });
</script>