---
import Layout from "../../layouts/Layout.astro";
import { storage } from "../../utils/storage";

export async function getStaticPaths() {
  if (typeof window === 'undefined') {
    return [];
  }
  
  const roadmaps = storage.getAllRoadmaps();
  return roadmaps.map(roadmap => ({
    params: { id: roadmap.id },
  }));
}

const { id } = Astro.params;
const roadmap = storage.getRoadmapById(id || '');
---

<Layout title="Edit Milestone">
  <main class="container mx-auto px-4 py-8">
    <div class="max-w-2xl mx-auto">
      <!-- Breadcrumb -->
      <nav class="flex mb-6 text-sm text-gray-400">
        <a href="/roadmap/view" class="hover:text-white">Roadmaps</a>
        <span class="mx-2">/</span>
        <a href={`/roadmap/${id}/milestones`} class="hover:text-white">{roadmap?.title}</a>
        <span class="mx-2">/</span>
        <span class="text-gray-300">Edit Milestone</span>
      </nav>

      <div class="bg-gray-800 rounded-lg p-6">
        <h1 class="text-2xl font-bold text-white mb-6">Edit Milestone</h1>
        
        <form class="space-y-6" id="milestoneForm">
          <div>
            <label for="title" class="block text-sm font-medium text-gray-300">Title</label>
            <input
              type="text"
              id="title"
              name="title"
              required
              class="mt-1 block w-full rounded-lg bg-gray-700 border-gray-600 text-white"
            />
          </div>

          <div>
            <label for="description" class="block text-sm font-medium text-gray-300">Description</label>
            <textarea
              id="description"
              name="description"
              rows="3"
              class="mt-1 block w-full rounded-lg bg-gray-700 border-gray-600 text-white"
            ></textarea>
          </div>

          <div class="grid grid-cols-2 gap-6">
            <div>
              <label for="dueDate" class="block text-sm font-medium text-gray-300">Due Date</label>
              <input
                type="date"
                id="dueDate"
                name="dueDate"
                required
                class="mt-1 block w-full rounded-lg bg-gray-700 border-gray-600 text-white"
              />
            </div>

            <div>
              <label for="priority" class="block text-sm font-medium text-gray-300">Priority</label>
              <select
                id="priority"
                name="priority"
                required
                class="mt-1 block w-full rounded-lg bg-gray-700 border-gray-600 text-white"
              >
                <option value="low">Low</option>
                <option value="medium">Medium</option>
                <option value="high">High</option>
              </select>
            </div>
          </div>

          <div>
            <label for="status" class="block text-sm font-medium text-gray-300">Status</label>
            <select
              id="status"
              name="status"
              required
              class="mt-1 block w-full rounded-lg bg-gray-700 border-gray-600 text-white"
            >
              <option value="not-started">Not Started</option>
              <option value="in-progress">In Progress</option>
              <option value="completed">Completed</option>
            </select>
          </div>

          <div>
            <label for="progress" class="block text-sm font-medium text-gray-300">Progress (%)</label>
            <input
              type="number"
              id="progress"
              name="progress"
              min="0"
              max="100"
              required
              class="mt-1 block w-full rounded-lg bg-gray-700 border-gray-600 text-white"
            />
          </div>

          <div class="flex justify-end space-x-4">
            <a
              href={`/roadmap/${id}/milestones`}
              class="px-4 py-2 text-sm rounded-lg bg-gray-700 text-gray-300 hover:bg-gray-600"
            >
              Cancel
            </a>
            <button
              type="submit"
              class="px-4 py-2 text-sm rounded-lg bg-blue-500 text-white hover:bg-blue-600"
            >
              Save Changes
            </button>
          </div>
        </form>
      </div>
    </div>
  </main>
</Layout>

<script define:vars={{ roadmapId: id }}>
document.addEventListener('DOMContentLoaded', () => {
  const searchParams = new URLSearchParams(window.location.search);
  const milestoneId = searchParams.get('milestoneId');
  
  if (!milestoneId) {
    console.error('No milestone ID provided');
    window.location.href = `/roadmap/${roadmapId}/milestones`;
    return;
  }

  // Get existing milestone data
  const milestone = storage.getMilestoneById(roadmapId, milestoneId);
  if (!milestone) {
    console.error('Milestone not found');
    window.location.href = `/roadmap/${roadmapId}/milestones`;
    return;
  }

  // Populate form with existing data
  const form = document.getElementById('milestoneForm');
  if (form) {
    form.querySelector('#title').value = milestone.title;
    form.querySelector('#description').value = milestone.description || '';
    form.querySelector('#dueDate').value = milestone.dueDate;
    form.querySelector('#priority').value = milestone.priority;
    form.querySelector('#status').value = milestone.status;
    form.querySelector('#progress').value = milestone.progress;
  }

  // Handle form submission
  form?.addEventListener('submit', (e) => {
    e.preventDefault();
    const formData = new FormData(form);

    const updatedMilestone = {
      ...milestone,
      title: formData.get('title'),
      description: formData.get('description'),
      dueDate: formData.get('dueDate'),
      status: formData.get('status'),
      progress: Number(formData.get('progress')),
      priority: formData.get('priority')
    };

    // Update milestone using storage utility
    storage.updateMilestone(updatedMilestone);

    // Redirect back to milestones list
    window.location.href = `/roadmap/${roadmapId}/milestones`;
  });
});
</script>