---
import Layout from '../../../../../layouts/Layout.astro';
import { storage } from '../../../../../utils/storage';
import { milestoneStorage } from '../../../../../utils/milestoneStorage';

const { id, milestoneId } = Astro.params;
const roadmap = storage.getRoadmapById(id as string);
const milestone = milestoneStorage.getMilestoneById(id as string, milestoneId as string);

if (!roadmap || !milestone) {
  return Astro.redirect('/404');
}

export const prerender = true;
---

<Layout title="Edit Milestone">
  <main class="container mx-auto px-4 py-8">
    <div class="max-w-2xl mx-auto">
      <nav class="flex mb-6 text-sm text-gray-400">
        <a href="/roadmap/view" class="hover:text-white">Roadmaps</a>
        <span class="mx-2">/</span>
        <a href={`/roadmap/${id}/milestones`} class="hover:text-white">{roadmap.title}</a>
        <span class="mx-2">/</span>
        <span class="text-gray-300">Edit Milestone</span>
      </nav>

      <div class="bg-gray-800 rounded-lg p-6">
        <h1 class="text-2xl font-bold text-white mb-6">Edit Milestone</h1>
        
        <form class="space-y-6" id="editMilestoneForm">
          <div>
            <label for="title" class="block text-sm font-medium text-gray-300">Title</label>
            <input
              type="text"
              id="title"
              name="title"
              value={milestone.title}
              required
              class="mt-1 block w-full rounded-lg bg-gray-700 border-gray-600 text-white"
            />
          </div>

          <div>
            <label for="description" class="block text-sm font-medium text-gray-300">Description</label>
            <textarea
              id="description"
              name="description"
              rows="3"
              class="mt-1 block w-full rounded-lg bg-gray-700 border-gray-600 text-white"
            >{milestone.description}</textarea>
          </div>

          <div>
  <label for="dueDate" class="block text-sm font-medium text-gray-300">Due Date</label>
  <input
    type="date"
    id="dueDate"
    name="dueDate"
    value={milestone.dueDate.toISOString().split('T')[0]}
    required
    class="mt-1 block w-full rounded-lg bg-gray-700 border-gray-600 text-white"
  />
</div>

            <div>
              <label for="priority" class="block text-sm font-medium text-gray-300">Priority</label>
              <select
                id="priority"
                name="priority"
                required
                class="mt-1 block w-full rounded-lg bg-gray-700 border-gray-600 text-white"
              >
                <option value="low" selected={milestone.priority === 'low'}>Low</option>
                <option value="medium" selected={milestone.priority === 'medium'}>Medium</option>
                <option value="high" selected={milestone.priority === 'high'}>High</option>
              </select>
            </div>
          </div>

          <div>
            <label for="status" class="block text-sm font-medium text-gray-300">Status</label>
            <select
              id="status"
              name="status"
              required
              class="mt-1 block w-full rounded-lg bg-gray-700 border-gray-600 text-white"
            >
              <option value="not-started" selected={milestone.status === 'not-started'}>Not Started</option>
              <option value="in-progress" selected={milestone.status === 'in-progress'}>In Progress</option>
              <option value="completed" selected={milestone.status === 'completed'}>Completed</option>
            </select>
          </div>

          <div>
            <label for="progress" class="block text-sm font-medium text-gray-300">Progress</label>
            <input
              type="range"
              id="progress"
              name="progress"
              min="0"
              max="100"
              value={milestone.progress}
              class="mt-1 block w-full"
            />
            <div class="mt-1 text-sm text-gray-400 text-right">
              <span id="progressValue">{milestone.progress}</span>%
            </div>
          </div>

          <div class="flex justify-end space-x-4">
            <a
              href={`/roadmap/${id}/milestones`}
              class="px-4 py-2 text-sm rounded-lg bg-gray-700 text-gray-300 hover:bg-gray-600"
            >
              Cancel
            </a>
            <button
              type="submit"
              class="px-4 py-2 text-sm rounded-lg bg-blue-500 text-white hover:bg-blue-600"
            >
              Save Changes
            </button>
          </div>
        </form>
      </div>
    </div>
  </main>
</Layout>

<script define:vars={{ roadmapId: id, milestoneId }}>
  const progressInput = document.getElementById('progress');
  const progressValue = document.getElementById('progressValue');

  progressInput?.addEventListener('input', (e) => {
    if (progressValue) {
      progressValue.textContent = e.target.value;
    }
  });

  document.getElementById('editMilestoneForm')?.addEventListener('submit', (e) => {
    e.preventDefault();
    const form = e.target;
    const formData = new FormData(form);

    const updatedMilestone = {
      id: milestoneId,
      roadmapId,
      title: formData.get('title'),
      description: formData.get('description'),
      dueDate: formData.get('dueDate'),
      priority: formData.get('priority'),
      status: formData.get('status'),
      progress: parseInt(formData.get('progress')),
      updatedAt: new Date().toISOString()
    };

    // Update milestone
    const stored = localStorage.getItem(`milestones-${roadmapId}`);
    const milestones = stored ? JSON.parse(stored) : [];
    const index = milestones.findIndex(m => m.id === milestoneId);
    if (index !== -1) {
      milestones[index] = { ...milestones[index], ...updatedMilestone };
      localStorage.setItem(`milestones-${roadmapId}`, JSON.stringify(milestones));
    }

    // Redirect back to milestones list
    window.location.href = `/roadmap/${roadmapId}/milestones`;
  });
</script>